// Generated by CoffeeScript 1.3.1
(function() {
  var Contacts, reset_data;

  Contacts = new Meteor.Collection('contacts');

  reset_data = function() {
    var name, names, _i, _len, _results;
    Contacts.remove({});
    names = ['Ada Lovelace', 'Grace Hopper', 'Marie Curie', 'Carl Friedrich Gauss', 'Nikola Tesla', 'Claude Shannon', 'Issac Newton'];
    _results = [];
    for (_i = 0, _len = names.length; _i < _len; _i++) {
      name = names[_i];
      _results.push(Contacts.insert({
        name: name,
        inout: "out"
      }));
    }
    return _results;
  };

  if (Meteor.is_client) {
    $.extend(Template.contacts, {
      contacts: function() {
        var sort;
        sort = Session.get('sort_by_name') ? {
          name: 1
        } : {
          inout: 1,
          name: 1
        };
        return Contacts.find({}, {
          sort: sort
        });
      },
      inoutHeader: function() {
        if (Session.get('sort_by_name')) {
          return "In/Out";
        } else {
          return "In/Out \u25BC";
        }
      },
      nameHeader: function() {
        if (Session.get('sort_by_name')) {
          return "Name \u25BC";
        } else {
          return "Name";
        }
      },
      events: {
        'click .inoutHeader': function() {
          return Session.set('sort_by_name', false);
        },
        'click .nameHeader': function() {
          return Session.set('sort_by_name', true);
        }
      }
    });
    $.extend(Template.contact, {
      "in": function() {
        if (this.inout === "in") {
          return "btn-success";
        } else {
          return "";
        }
      },
      out: function() {
        if (this.inout === "out") {
          return "btn-inverse";
        } else {
          return "";
        }
      },
      events: {
        'click .inBtn': function() {
          return Contacts.update(this._id, {
            $set: {
              inout: "in"
            }
          });
        },
        'click .outBtn': function() {
          return Contacts.update(this._id, {
            $set: {
              inout: "out"
            }
          });
        }
      }
    });
    $.extend(Template.navbar, {
      events: {
        'click .sort_by_name': function() {
          return Session.set('sort_by_name', true);
        },
        'click .sort_by_inout': function() {
          return Session.set('sort_by_name', false);
        },
        'click .reset_data': function() {
          return reset_data();
        }
      }
    });
  }

  if (Meteor.is_server) {
    Meteor.startup(function() {
      if (Contacts.find().count() === 0) {
        return reset_data();
      }
    });
  }

}).call(this);
